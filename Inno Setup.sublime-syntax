%YAML 1.2
---
name: 'Inno Setup'
comment: https://github.com/idleberg/sublime-innosetup
file_extensions: [iss, isl]
scope: source.inno

variables:
  preprocessor_directives: '(?:append|define|dim|elif|else|emit|endif|endsub|error|expr|file|for|if|ifn?def|ifn?exist|include|insert|pragma|preproc|redim|sub|undef)'
  sections: '(?:Code|Components|CustomMessages|Dirs|Files|Icons|INI|InstallDelete|LangOptions|Languages|Messages|Registry|Run|Setup|Tasks|Types|UninstallDelete|UninstallRun)'
  setup_directives: '(?:AllowCancelDuringInstall|AllowNetworkDrive|AllowNoIcons|AllowRootDirectory|AllowUNCPath|AlwaysCreateUninstallIcon|AlwaysRestart|AlwaysShowComponentsList|AlwaysShowDirOnReadyPage|AlwaysShowGroupOnReadyPage|AlwaysUsePersonalGroup|AppComments|AppContact|AppCopyright|AppendDefaultDirName|AppendDefaultGroupName|AppId|AppModifyPath|AppMutex|AppName|AppPublisher|AppPublisherURL|AppReadmeFile|AppSupportPhone|AppSupportURL|AppUpdatesURL|AppVerName|AppVersion|ArchitecturesAllowed|ArchitecturesInstallIn64BitMode|BackColor|BackColor2|BackColorDirection|BackSolid|ChangesAssociations|ChangesEnvironment|CloseApplications|CloseApplicationsFilter|Compression|CompressionThreads|CopyrightFontName|CopyrightFontSize|CreateAppDir|CreateUninstallRegKey|DefaultDialogFontName|DefaultDirName|DefaultGroupName|DefaultUserInfoName|DefaultUserInfoOrg|DefaultUserInfoSerial|DialogFontName|DialogFontSize|DirExistsWarning|DisableDirPage|DisableFinishedPage|DisableProgramGroupPage|DisableReadyMemo|DisableReadyPage|DisableStartupPrompt|DisableWelcomePage|DiskClusterSize|DiskSliceSize|DiskSpanning|EnableDirDoesntExistWarning|Encryption|ExtraDiskSpaceRequired|FlatComponentsList|InfoAfterFile|InfoBeforeFile|InternalCompressLevel|LanguageCodePage|LanguageDetectionMethod|LanguageID|LanguageName|LicenseFile|LZMAAlgorithm|LZMABlockSize|LZMADictionarySize|LZMAMatchFinder|LZMANumBlockThreads|LZMANumFastBytes|LZMAUseSeparateProcess|MergeDuplicateFiles|MinVersion|OnlyBelowVersion|Output|OutputBaseFilename|OutputDir|OutputManifestFile|Password|Permissions|PrivilegesRequired|PrivilegesRequiredOverridesAllowed|ReserveBytes|RestartApplications|RestartIfNeededByRun|RightToLeft|SetupIconFile|SetupLogging|ShowComponentSizes|ShowLanguageDialog|ShowTasksTreeLines|ShowUndisplayableLanguages|SignedUninstaller|SignedUninstallerDir|SignTool|SignToolMinimumTimeBetween|SignToolRetryCount|SignToolRetryDelay|SlicesPerDisk|SolidCompression|SourceDir|TerminalServicesAware|TimeStampRounding|TimeStampsInUTC|TitleFontName|TitleFontSize|TouchDate|TouchTime|Uninstallable|UninstallDisplayIcon|UninstallDisplayName|UninstallDisplaySize|UninstallFilesDir|UninstallLogMode|UninstallRestartComputer|UsePreviousPrivileges|UpdateUninstallLogAppName|UsePreviousAppDir|UsePreviousGroup|UsePreviousLanguage|UsePreviousSetupType|UsePreviousTasks|UsePreviousUserInfo|UserInfoPage|UseSetupLdr|VersionInfoCompany|VersionInfoCopyright|VersionInfoDescription|VersionInfoOriginalFileName|VersionInfoProductName|VersionInfoProductTextVersion|VersionInfoProductVersion|VersionInfoTextVersion|VersionInfoVersion|WelcomeFontName|WelcomeFontSize|WindowResizable|WindowShowCaption|WindowStartMaximized|WindowVisible|WizardImageBackColor|WizardImageFile|WizardImageStretch|WizardResizable|WizardSizePercent|WizardSmallImageFile|WizardStyle)'
  setup_directives_deprecated: '(?:DisableAppendDir|DontMergeDuplicateFiles|MessagesFile|UninstallIconFile|UninstallIconName|UninstallStyle|WizardSmallImageBackColor)'
  parameters: '(?:AfterInstall|Attribs|BeforeInstall|Check|Components|Description|DestDir|DestName|Excludes|Filename|Flags|GroupDescription|Languages|MessagesFile|MinVersion|Name|OnlyBelowVersion|Parameters|Permissions|Root|RunOnceId|Source|StatusMsg|Subkey|Type|ValueData|ValueName|ValueType|Verb|WorkingDir)'
  keywords: '(?:32bit|64bit|admin|allowunsafefiles|append|auto|binary|bzip|checkablealone|checkedonce|clAqua|clBlack|clBlue|clFuchsia|clGray|clGreen|clLime|clMaroon|clNavy|clOlive|closeonexit|clPurple|clRed|clSilver|clTeal|clWhite|clYellow|compact|comparetimestamp|compiler|confirmoverwrite|createallsubdirs|createkeyifdoesntexist|createonlyiffileexists|createvalueifdoesntexist|current|custom|deleteafterinstall|deletekey|deletevalue|desktopicon|dirifempty|disablenouninstallwarning|dontcloseonexit|dontcopy|dontcreatekey|dontinheritcheck|dontverifychecksum|dword|everyone-full|excludefromshowinnewinstall|exclusive|expandsz|external|fast|files|filesandordirs|fixed|foldershortcut|fontisnttruetype|full|gacinstall|help|hidden|hidewizard|ia64|ignoreversion|iscustom|isreadme|lefttoright|locale|lowest|lzma|lzma2|main|max|modify|multisz|new|no|nocompression|noencryption|noerror|none|noregerror|normal|notcontentindexed|nowait|onlyifdoesntexist|overwrite|overwritereadonly|postinstall|poweruser|preservestringtype|preventpinning|program|promptifolder|qword|read|readexec|readme|readonly|recursesubdirs|regserver|regtypelib|replacesameversion|restart|restartreplace|runascurrentuser|runasoriginaluser|runhidden|runminimized|setntfscompression|sharedfile|shellexec|skipifdoesntexist|skipifnotsilent|skipifsilent|skipifsourcedoesntexist|solidbreak|sortfilesbyextension|sortfilesbyname|string|system|toptobottom|touch|uilanguage|ultra|unchecked|uninsalwaysuninstall|uninsclearvalue|uninsdeleteentry|uninsdeletekey|uninsdeletekeyifempty|uninsdeletesection|uninsdeletesectionifempty|uninsdeletevalue|uninsneveruninstall|uninsnosharedfileprompt|uninsremovereadonly|uninsrestartdelete|unsetntfscompression|useapppaths|users-modify|waituntilidle|waituntilterminated|x64|x86|yes|zip)'
  constants: '(?:\\|app|autoappdata|autocf|autocf32|autocf64|autodesktop|autodocs|autofonts|autopf|autopf32|autopf64|autoprograms|autostartmenu|autostartup|autotemplates|cmd|commonappdata|commoncf|commoncf32|commoncf64|commondesktop|commondocs|commonfonts|commonpf|commonpf32|commonpf64|commonprograms|commonstartmenu|commonstartup|commontemplates|computername|dao|dotnet11|dotnet20|dotnet2032|dotnet2064|dotnet40|dotnet4032|dotnet4064|group|groupname|hwnd|language|localappdata|log|sd|src|srcexe|sys|sysnative|sysuserinfoname|sysuserinfoorg|syswow64|tmp|uninstallexe|userappdata|usercf|userdesktop|userdocs|userfavorites|userfonts|userinfoname|userinfoorg|userinfoserial|username|userpf|userprograms|usersavedgames|usersendto|userstartmenu|userstartup|usertemplates|win|wizardhwnd)'
  constants_deprecated: '(?:cf|cf32|cf64|commonfavorites|fonts|pf|pf32|pf64|sendto)'
  escape_sequences: '\\(?:[0abtnvfre "/\\N_Lp]|x\d\d|u\d{4}|U\d{8})'

contexts:
  # Source.
  main:
    # Preprocessor directive.
    - match: '^\s*(?=#)'
      push: preprocessor
    # Code section.
    - match: '(?i)^\s*(\[Code\])\s*$'
      captures:
        1: entity.name.namespace
      embed: scope:source.pascal.inno
      embed_scope: source.pascal.embedded.inno
      escape: '(?i)^(?=\s*\[{{sections}}\]\s*$)'
    # Other section.
    - match: '(?i)^\s*(\[{{sections}}\])\s*$'
      captures:
        1: entity.name.namespace
    # Setup directive.
    - match: '(?i)^\s*({{setup_directives}}|{{setup_directives_deprecated}})\s*(=)\s*'
      captures:
        1: keyword.other.inno
        2: keyword.operator.assignment.inno
      push:
        - include: keyword
        - include: value
    # Assignment after unrecognized directive (for example in CustomMessages section).
    - match: '='
      scope: keyword.operator.assignment.inno
      push:
        - include: value
    # Parameter where keywords are expected.
    - match: '(?i)\b(Attribs|Components|Flags|Root|Type|ValueType|Verb)\s*(:)\s*'
      captures:
        1: keyword.other.inno
        2: keyword.operator.assignment.inno
      push:
        - include: separator
        - include: keyword
    # Other parameter.
    - match: '(?i)\b({{parameters}})\s*(:)\s*'
      captures:
        1: keyword.other.inno
        2: keyword.operator.assignment.inno
      push:
        - include: separator
        - include: value
    # Comment.
    - include: comment

  # Preprocessor.
  preprocessor:
    - meta_scope: meta.preprocessor.inno
    - match: '(?i)#{{preprocessor_directives}}\b'
      scope: keyword.other.inno
    - match: '\\(?=\s*$)'
      scope: punctuation.separator.continuation.inno
      # Resume parsing at next line.
      push:
        - match: '(?=\S|^\s*$)'
          pop: true
    - match: '(?=$)'
      pop: true

  # Separator.
  separator:
    - match: ';'
      scope: punctuation.separator.inno
      pop: true
    - match: '(?=$)'
      pop: true

  # Keyword.
  keyword:
    - match: '(?i)\s*\b{{keywords}}\b'
      scope: constant.language.inno

  # Value.
  value:
    # New line always ends value.
    - match: '(?=$)'
      pop: true
    # Hexadecimal number.
    - match: '(?i)\$[0-9a-f]+'
      scope: constant.numeric.integer.hexadecimal
    # Integer, float or version.
    - match: '\b[0-9]+(?:\.[0-9]+)*\b'
      scope: constant.numeric
    # Double quoted string.
    - match: '"'
      scope: punctuation.definition.string.begin.inno
      push:
        - meta_scope: string.quoted.double.inno
        - include: constant
        - match: '"'
          scope: punctuation.definition.string.end.inno
          pop: true
    # Single quoted string.
    - match: "'"
      scope: punctuation.definition.string.begin.inno
      push:
        - meta_scope: string.quoted.double.inno
        - include: constant
        - match: "'"
          scope: punctuation.definition.string.end.inno
          pop: true
    # Unquoted string.
    - match: ''
      push:
        - meta_content_scope: string.unquoted.inno
        - include: constant
        # All sequences that may terminate string. If parent context doesn't act upon them, the string will resume.
        - match: '(?=;|$)'
          pop: true

  # Constant.
  constant:
    # Predefined constant.
    - match: '(?i)(\{)(?:{{constants}}|{{constants_deprecated}})(\})'
      scope: constant.other.inno
      captures:
        1: punctuation.section.braces.begin.inno
        2: punctuation.section.braces.end.inno
    # Dynamic constant.
    - match: '(\{)(?:%|(?:code|drive|ini|cm|reg|param):)'
      captures:
        1: punctuation.section.braces.begin.inno
      push:
        - meta_scope: constant.other.inno
        - match: '\}'
          scope: punctuation.section.braces.end.inno
          pop: true
        - match: '\|'
          scope: punctuation.separator.inno
        - match: '(?i)%[0-9a-f]{2}'
          scope: constant.character.escape
        - include: constant

  # Comment.
  comment:
    # Line comment.
    - match: ^\s*(;).*$
      scope: comment.line.semicolon.inno
      captures:
        1: punctuation.definition.comment.inno
    # Preprocessor comment.
    - match: ^\s*(//).*$
      scope: comment.line.double-slash.inno
      captures:
        1: punctuation.definition.comment.inno
